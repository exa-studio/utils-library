name: git tag release and npm package publisher
on:
  push:
    branches:
      - main
jobs:
  publish_tag_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Versionize
        run: dotnet tool install --global Versionize

      - name: Versioning
        id: versionize
        run: versionize --changelog-all --exit-insignificant-commits
        continue-on-error: true

      - name: No release required
        if: steps.versionize.outcome != 'success'
        run: echo "Skipping Release. No release required."

      - name: Setup git
        run: |
          git config --local user.email "<user@email.com>"
          git config --local user.name "<username>"

      - name: Push changes to GitHub
        if: steps.versionize.outcome == 'success'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true

      - name: Find and Replace Nuget
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "<configuration></configuration>"
          replace: ${{ secrets.NUGET_CONFIG }}
          regex: false

      - name: Bump version and push tag
        id: bump_version
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          WITH_V: true
          RELEASE_BRANCHES: main

      - name: Pack
        run: dotnet pack --configuration debug

      - name: Push
        run: dotnet nuget push "./bin/Debug/*.nupkg"  --api-key ${{ secrets.TOKEN_GITHUB }}  --source "github"

    #   - run: |
    #       git config --global user.email "kevingil1910@gmail.com"
    #       git config --global user.name "${{ github.actor }}"
    #       echo "${{ steps.bump_version.outputs.tag }}"
    #   - run: npm version "${{ steps.bump_version.outputs.tag }}" && npm publish
    #     env:
    #       NODE_AUTH_TOKEN:
